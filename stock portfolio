import requests
import json
# Global portfolio
portfolio = {}
# API Configuration
API_KEY = "your_alpha_vantage_api_key"  # Replace with your API key
BASE_URL = "https://www.alphavantage.co/query"

def fetch_stock_price(ticker):
    """Fetch the current stock price using Alpha Vantage API."""
    params = {
        "function": "TIME_SERIES_INTRADAY",
        "symbol": ticker,
        "interval": "1min",
        "apikey": API_KEY
    }
    try:
        response = requests.get(BASE_URL, params=params)
        data = response.json()
        if "Time Series (1min)" not in data:
            print("Error fetching data for", ticker)
            return None
        latest_time = next(iter(data["Time Series (1min)"]))
        price = float(data["Time Series (1min)"][latest_time]["1. open"])
        return price
    except Exception as e:
        print("Error:", e)
        return None

def add_stock():
    """Add a stock to the portfolio."""
    ticker = input("Enter the stock ticker: ").upper()
    quantity = int(input(f"Enter the quantity of {ticker}: "))
    purchase_price = float(input(f"Enter the purchase price of {ticker}: "))
    portfolio[ticker] = {"quantity": quantity, "purchase_price": purchase_price}

def remove_stock():
    """Remove a stock from the portfolio."""
    ticker = input("Enter the stock ticker to remove: ").upper()
    if ticker in portfolio:
        del portfolio[ticker]
        print(f"Removed {ticker} from portfolio.")
    else:
        print("Stock not found in portfolio.")

def view_portfolio():
    """View the current portfolio."""
    if not portfolio:
        print("Your portfolio is empty.")
        return

    print("\nYour Portfolio:")
    print(f"{'Ticker':<10}{'Quantity':<10}{'Purchase Price':<15}{'Current Price':<15}{'Profit/Loss':<15}")
    print("-" * 65)
    for ticker, details in portfolio.items():
        current_price = fetch_stock_price(ticker)
        if current_price is None:
            print(f"{ticker:<10}{details['quantity']:<10}{details['purchase_price']:<15}{'N/A':<15}{'N/A':<15}")
        else:
            profit_loss = (current_price - details["purchase_price"]) * details["quantity"]
            print(f"{ticker:<10}{details['quantity']:<10}{details['purchase_price']:<15.2f}{current_price:<15.2f}{profit_loss:<15.2f}")

def main():
    """Main function to handle user interaction."""
    while True:
        print("\nStock Portfolio Tracker")
        print("1. Add Stock")
        print("2. Remove Stock")
        print("3. View Portfolio")
        print("4. Exit")
        choice = input("Choose an option: ")
        
        if choice == "1":
            add_stock()
        elif choice == "2":
            remove_stock()
        elif choice == "3":
            view_portfolio()
        elif choice == "4":
            print("Exiting Portfolio Tracker. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")
# Run the tracker
if __name__ == "__main__":
    main()
